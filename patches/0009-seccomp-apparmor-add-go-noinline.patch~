From: Akihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>
Date: Tue, 15 Aug 2023 04:31:45 +0900
Subject: seccomp, apparmor: add go:noinline

Origin: backport, https://github.com/containerd/containerd/commit/0f043ae4
---
 contrib/apparmor/apparmor.go |  5 +++++
 contrib/seccomp/seccomp.go   | 10 ++++++++++
 2 files changed, 15 insertions(+)

Index: containerd/contrib/apparmor/apparmor.go
===================================================================
--- containerd.orig/contrib/apparmor/apparmor.go
+++ containerd/contrib/apparmor/apparmor.go
@@ -40,6 +40,11 @@ func WithProfile(profile string) oci.Spe
 
 // WithDefaultProfile will generate a default apparmor profile under the provided name
 // for the container.  It is only generated if a profile under that name does not exist.
+//
+// FIXME: pkg/cri/[sb]server/container_create_linux_test.go depends on go:noinline
+// since Go 1.21.
+//
+//go:noinline
 func WithDefaultProfile(name string) oci.SpecOpts {
 	return func(_ context.Context, _ oci.Client, _ *containers.Container, s *specs.Spec) error {
 		if err := LoadDefaultProfile(name); err != nil {
Index: containerd/contrib/seccomp/seccomp.go
===================================================================
--- containerd.orig/contrib/seccomp/seccomp.go
+++ containerd/contrib/seccomp/seccomp.go
@@ -30,6 +30,11 @@ import (
 // WithProfile receives the name of a file stored on disk comprising a json
 // formatted seccomp profile, as specified by the opencontainers/runtime-spec.
 // The profile is read from the file, unmarshaled, and set to the spec.
+//
+// FIXME: pkg/cri/[sb]server/container_create_linux_test.go depends on go:noinline
+// since Go 1.21.
+//
+//go:noinline
 func WithProfile(profile string) oci.SpecOpts {
 	return func(_ context.Context, _ oci.Client, _ *containers.Container, s *specs.Spec) error {
 		s.Linux.Seccomp = &specs.LinuxSeccomp{}
@@ -46,6 +51,11 @@ func WithProfile(profile string) oci.Spe
 
 // WithDefaultProfile sets the default seccomp profile to the spec.
 // Note: must follow the setting of process capabilities
+//
+// FIXME: pkg/cri/[sb]server/container_create_linux_test.go depends on go:noinline
+// since Go 1.21.
+//
+//go:noinline
 func WithDefaultProfile() oci.SpecOpts {
 	return func(_ context.Context, _ oci.Client, _ *containers.Container, s *specs.Spec) error {
 		s.Linux.Seccomp = DefaultProfile(s)
